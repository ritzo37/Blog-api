generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  password String
  role     String     @default("user")
  comments Comments[]
  posts    Post[]
  replies  Replies[]
}

model Post {
  postId    Int        @id @default(autoincrement())
  content   String
  title     String
  authorId  Int
  published Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  comments  Comments[]
  author    User       @relation(fields: [authorId], references: [id])
}

model Comments {
  cid       Int         @id @default(autoincrement())
  content   String
  postId    Int
  createdAt DateTime    @default(now())
  userId    Int
  post      Post        @relation(fields: [postId], references: [postId], onDelete: Cascade)
  user      User        @relation(fields: [userId], references: [id])
  downvotes Downvotes[]
  replies   Replies[]
  upvotes   Upvotes[]
}

model Replies {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int
  cid       Int
  comment   Comments @relation(fields: [cid], references: [cid], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id])
}

model Upvotes {
  id      Int      @id @default(autoincrement())
  userId  Int
  cid     Int
  comment Comments @relation(fields: [cid], references: [cid], onDelete: Cascade)
}

model Downvotes {
  id      Int      @id @default(autoincrement())
  userId  Int
  cid     Int
  comment Comments @relation(fields: [cid], references: [cid], onDelete: Cascade)
}
