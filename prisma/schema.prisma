generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
   id Int @id @default(autoincrement())
   name String @unique
   password String 
   role String @default("user")
   posts Post[]
   comments Comments[]
   replies Replies[]
}

model Post {
   postId Int @id @default(autoincrement())
   content String
   title String 
   author User @relation (fields: [authorId] , references: [id])
   authorId Int
   published Boolean  @default(false)
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now())
   comments Comments[]
}

model Comments {
   cid Int @id @default(autoincrement())
   content String
   post Post @relation (fields: [postId] , references: [postId], onDelete: Cascade)
   postId Int 
   createdAt DateTime @default(now())
   upvotes Upvotes[]
   downvotes Downvotes[]
   user User @relation(fields: [userId] ,references: [id])
   replies Replies[] 
   userId Int 
}

model Replies {
    id Int @id @default(autoincrement())
    content String
    createdAt DateTime @default(now())
    userId Int 
    user User @relation(fields: [userId],references: [id])
    cid Int 
    comment Comments @relation(fields: [cid] , references: [cid] , onDelete: Cascade)
}

model Upvotes {
    id Int @id @default(autoincrement())
    userId Int
    comment Comments @relation (fields: [cid], references: [cid] , onDelete: Cascade) 
    cid Int 
}

model Downvotes {
    id Int @id @default(autoincrement())
    userId Int
    comment Comments @relation (fields: [cid], references: [cid] , onDelete: Cascade) 
    cid Int 
}